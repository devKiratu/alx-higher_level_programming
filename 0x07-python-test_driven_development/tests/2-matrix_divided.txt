>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[]], 2)
[[]]
>>> matrix_divided([], 2)
[]
>>> matrix_divided([[1,2,3],[4,5,6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[1,2,3],[4,5,6]], 3.5)
[[0.29, 0.57, 0.86], [1.14, 1.43, 1.71]]
>>> matrix_divided([[1,"2",3],[4,5,6]], 3.5)
Traceback (most recent call last):
   ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([1,2,3,[]], 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1,2,3],[4]], 2)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[1,2,3],[4,5,6]], [3])
Traceback (most recent call last):
   ...
TypeError: div must be a number
>>> matrix_divided([[1,2,3],[4,5,6]], "3")
Traceback (most recent call last):
   ...
TypeError: div must be a number
>>> matrix_divided([[1,2,3],[4,5,6]], 0)
Traceback (most recent call last):
   ...
ZeroDivisionError: division by zero
>>> matrix_divided([[1,True,3],[4,5,6]], 3.5)
Traceback (most recent call last):
   ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1,False,3],[4,5,6]], 3.5)
Traceback (most recent call last):
   ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
